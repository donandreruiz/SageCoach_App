{
  "_args": [
    [
      {
        "raw": "papaparse",
        "scope": null,
        "escapedName": "papaparse",
        "name": "papaparse",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/AndreRuiz/Desktop/sagecoach_app_project"
    ]
  ],
  "_from": "papaparse@latest",
  "_id": "papaparse@4.5.0",
  "_inCache": true,
  "_location": "/papaparse",
  "_nodeVersion": "4.2.6",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/papaparse_4.5.0_1528107191539_0.5922691947214036"
  },
  "_npmUser": {
    "name": "pokoli",
    "email": "sergi@koolpi.com"
  },
  "_npmVersion": "3.5.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "papaparse",
    "scope": null,
    "escapedName": "papaparse",
    "name": "papaparse",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/papaparse/-/papaparse-4.5.0.tgz",
  "_shasum": "fb625d390b6e5d544db20658ce3665002c3d8e80",
  "_shrinkwrap": null,
  "_spec": "papaparse",
  "_where": "/Users/AndreRuiz/Desktop/sagecoach_app_project",
  "author": {
    "name": "Matthew Holt",
    "url": "https://twitter.com/mholt6"
  },
  "bugs": {
    "url": "https://github.com/mholt/PapaParse/issues"
  },
  "dependencies": {},
  "description": "Fast and powerful CSV parser for the browser that supports web workers and streaming large files. Converts CSV to JSON and JSON to CSV.",
  "devDependencies": {
    "chai": "^4.1.2",
    "connect": "^3.3.3",
    "eslint": "^4.19.1",
    "grunt": "^1.0.2",
    "grunt-contrib-uglify": "^3.3.0",
    "mocha": "^3.5.0",
    "mocha-phantomjs": "^4.1.0",
    "open": "0.0.5",
    "phantomjs-prebuilt": "^2.1.16",
    "serve-static": "^1.7.1"
  },
  "directories": {},
  "dist": {
    "shasum": "fb625d390b6e5d544db20658ce3665002c3d8e80",
    "tarball": "https://registry.npmjs.org/papaparse/-/papaparse-4.5.0.tgz",
    "fileCount": 21,
    "unpackedSize": 224514,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbFRC4CRA9TVsSAnZWagAAFmsP/jRVw5vBP3o8pe/yUiOP\nPgoVAmMkvfKn/X4Lmpcv+i601AmxoxLqr7nKNOPgOFmm6C+yes+lYAU7CIbH\nJQbfl2XOOhJFXIcRu0wAIM1M/NWCAyC3C2RmtNF5cbFXzDg9op0qfiUTLaDb\nxYWS/Dke5FrEGrzGm4mI1cPa9KirJLtFgvKIpA8SJRPiW2FAAeWbdAOymVO5\nM3VR7ij0m9KQTl+u/+MpCzPT1SGuFXmTGc1gLi6cjteinWVo2HaH3VyYpPAR\n6JIp93YNIlMuONcBNgSA03+0Bb8EyarSaWt3a9wTlxs8hXMOpD7x1sjnP3xN\nmc+dh7ix9LQw2j7NQ9FiZQ6WbycJPbKvhflWJr4VFVF2TNRf+sUrYDwafqw+\nuQLDqOhP4GACrH07JUrvt7W6+StqW7UhPjFZqzkvVJN/fSfqGTfDvHvrJQmg\nEsW4fxEaekInEFXXlX1Mu+sHc1KaB9dor7a3N+E2IfLab2mAHF+nWEQ1QuXH\nTsUTsepN62HchKWForUaSxXRYZct7rPsHExZmYyggYNsRaMbk4FhK4z6gWg8\n0Pf/rxvZdamwsoHODFRdYwK/fhMvalmaTYuo3Y1EbttuaeaIcSRzD/yEJ9Wr\n7CraHIrFyXC6L96yxjwOAr3GpxXZdp/3Q0Vqv9aUTagoNqBEWNXi76oCixRE\noHU+\r\n=c0TJ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "9f473db317328a93ed3721bc430f137f17e0f642",
  "homepage": "http://papaparse.com",
  "keywords": [
    "csv",
    "parser",
    "parse",
    "parsing",
    "delimited",
    "text",
    "data",
    "auto-detect",
    "comma",
    "tab",
    "pipe",
    "file",
    "filereader",
    "stream",
    "worker",
    "workers",
    "thread",
    "threading",
    "multi-threaded",
    "jquery-plugin"
  ],
  "license": "MIT",
  "main": "papaparse.js",
  "maintainers": [
    {
      "name": "mholt",
      "email": "Matthew.Holt+npm@gmail.com"
    },
    {
      "name": "pokoli",
      "email": "sergi@koolpi.com"
    }
  ],
  "name": "papaparse",
  "optionalDependencies": {},
  "readme": "Parse CSV with JavaScript\n========================================\n\nPapa Parse is the [fastest](http://jsperf.com/javascript-csv-parsers/4) in-browser CSV (or delimited text) parser for JavaScript. It is reliable and correct according to [RFC 4180](https://tools.ietf.org/html/rfc4180), and it comes with these features:\n\n- Easy to use\n- Parse CSV files directly (local or over the network)\n- Fast mode ([is really fast](http://jsperf.com/javascript-csv-parsers/3))\n- Stream large files (even via HTTP)\n- Reverse parsing (converts JSON to CSV)\n- Auto-detect delimiter\n- Worker threads to keep your web page reactive\n- Header row support\n- Pause, resume, abort\n- Can convert numbers and booleans to their types\n- Optional jQuery integration to get files from `<input type=\"file\">` elements\n- One of the only parsers that correctly handles line-breaks and quotations\n\nPapa Parse has **no dependencies** - not even jQuery.\n\nInstall\n-------\n\npapaparse is available on [npm](https://www.npmjs.com/package/papaparse). It\ncan be installed with the following command:\n\n    npm install papaparse\n\nIf you don't want to use npm, [papaparse.min.js](https://github.com/mholt/PapaParse/blob/master/papaparse.min.js) can be downloaded to your project source.\n\n\nHomepage & Demo\n----------------\n\n- [Homepage](http://papaparse.com)\n- [Demo](http://papaparse.com/demo)\n\nTo learn how to use Papa Parse:\n\n- [Documentation](http://papaparse.com/docs)\n\nThe website is hosted on on [Github Pages](https://pages.github.com/).  If\nyou want to contribute just clone the gh-branch of this repository and\nopen a pull request.\n\n\nPapa Parse for Node\n--------------------\n\nPapa Parse can parse a [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) instead of a [File](https://www.w3.org/TR/FileAPI/) when used in Node.js environments (in addition to plain strings). In this mode, `encoding` must, if specified, be a Node-supported character encoding. The `Papa.LocalChunkSize`, `Papa.RemoteChunkSize` , `download`, `withCredentials` and `worker` config options are unavailable.\n\nPapa Parse can also parse in a node streaming style which makes `.pipe` available.  Simply pipe the [Readable Stream](https://nodejs.org/api/stream.html#stream_readable_streams) to the stream returned from `Papa.parse(Papa.NODE_STREAM_INPUT, options)`.  The `Papa.LocalChunkSize`, `Papa.RemoteChunkSize` , `download`, `withCredentials`, `worker`, `step`, and `complete` config options are unavailable.  To register a callback with the stream to process data, use the `data` event like so: `stream.on('data', callback)` and to signal the end of stream, use the 'end' event like so: `stream.on('end', callback)`.\n\nGet Started\n-----------\n\nFor usage instructions, see the [homepage](http://papaparse.com) and, for more detail, the [documentation](http://papaparse.com/docs).\n\nTests\n-----\n\nPapa Parse is under test. Download this repository, run `npm install`, then `npm test` to run the tests.\n\nContributing\n------------\n\nTo discuss a new feature or ask a question, open an issue. To fix a bug, submit a pull request to be credited with the [contributors](https://github.com/mholt/PapaParse/graphs/contributors)! Remember, a pull request, *with test*, is best. You may also discuss on Twitter with [#PapaParse](https://twitter.com/search?q=%23PapaParse&src=typd&f=realtime) or directly to me, [@mholt6](https://twitter.com/mholt6).\n\nIf you contribute a patch, ensure the tests suite is running correctly. We run continuous integration on each pull request and will not accept a patch that breaks the tests.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mholt/PapaParse.git"
  },
  "scripts": {
    "lint": "eslint --no-ignore papaparse.js Gruntfile.js .eslintrc.js 'tests/**/*.js'",
    "test": "npm run lint && npm run test-node && npm run test-phantomjs",
    "test-browser": "node tests/test.js",
    "test-node": "mocha tests/node-tests.js tests/test-cases.js",
    "test-phantomjs": "node tests/test.js --phantomjs"
  },
  "version": "4.5.0"
}
